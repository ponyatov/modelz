
`model																`MODULE	 =
'metacircular implementation of a FORTH-like homoiconic language'	`TITLE	 =
'Dmitry Ponyatov <dponyatov@gmail.com>'								`AUTHOR	 =
'CC BY-NC-ND'														`LICENSE =

web ??

`META voc

	dup metaL <<	\ to global vocabulary
	dup `DEFS =		\ override current definitions
	dup USE	  //	\ append to search path
.

																`frame group

`Frame				class	.
	`Primitive		class	Frame 		?? super ?? 
		`Symbol		class	Primitive	super
		`String		class	Primitive	super
	`Container		class	Frame 		super
		`Stack		class	Container	super
		`Dict		class	Container	super
		`Vector		class	Container	super
	`Active			class	Frame 		super
		`Cmd		class	Active 		super
		`VM			class	Active 		super
		`Seq		class	Active		super
	`IO				class	Frame 		super
		`Dir		class	IO 			super
		`File		class	IO 			super
	`Meta			class	Frame 		super
		`Fn			class	Meta 		super
		`Class		class	Meta 		super
		`Method		class	Fn			super
		`Module		class	Meta 		super
		`Group		class	Meta 		super
		`Net		class	IO			super
			`Web	class	Net			super
			`IP		class	Net			super
			`Port	class	Net			super
		??

																`lexer group

`ply.lex `lex as import

																`forth group

`metaL		VM			vm =

																`debug group

BYE			fn
Q			fn
QQ			fn															
															
																`stack group
															
																`ops group
																
`EQ			fn			`= =

															`compiler group

`VOC			fn
`DEFINE			fn
`USE			fn

															`interpreter group

`QUOTE			fn
`WORD			fn
`FIND			fn
`EVAL			fn
`INTERPRET		fn
`REPL			fn

																`meta group

																`init group

																`files group

[
./model.py
./model.mel
./Makefile
./.gitignore
./.project
./.pydevproject
./.settings/org.eclipse.core.runtime.prefs
./.settings/org.eclipse.core.resources.prefs
.externalToolBuilders/model_make.launch
] file map
